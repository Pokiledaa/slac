make all --print-data-base --no-builtin-variables --no-builtin-rules --question
make: *** No rule to make target 'all'.  Stop.

# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Thu Jul  7 16:34:49 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
PAPERSIZE = a4
# environment
DESKTOP_SESSION = cinnamon
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# environment
XDG_SESSION_TYPE = x11
# environment
VSCODE_LOG_NATIVE = false
# environment
GTK3_MODULES = xapp-gtk3-module
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
XAUTHORITY = /home/pokileda/.Xauthority
# environment
GDMSESSION = cinnamon
# default
MAKE_VERSION := 4.2.1
# makefile
CURDIR := /home/pokileda/Desktop/secc/slac
# makefile
SHELL = /bin/sh
# environment
GDM_LANG = en_US
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/share/code/code
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-cinnamon:/etc/xdg
# environment
GTK_OVERLAY_SCROLLING = 1
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# automatic
@F = $(notdir $@)
# environment
GIO_LAUNCHED_DESKTOP_FILE = /usr/share/applications/code.desktop
# 'override' directive
GNUMAKEFLAGS := 
# environment
MAKELEVEL := 0
# environment
MANDATORY_PATH = /usr/share/gconf/cinnamon.mandatory.path
# environment
XDG_DATA_DIRS = /usr/share/cinnamon:/usr/share/gnome:/home/pokileda/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# environment
LC_NAME = az_IR.UTF-8
# environment
VSCODE_CWD = /home/pokileda
# environment
XDG_SESSION_PATH = /org/freedesktop/DisplayManager/Session0
# default
MAKE_HOST := x86_64-pc-linux-gnu
# makefile (from 'Makefile', line 11)
PATH := /home/pokileda/.local/bin:/home/pokileda/.poetry/bin:/home/pokileda/.local/bin:/home/pokileda/.poetry/bin:/home/pokileda/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
# environment
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# environment
GJS_DEBUG_OUTPUT = stderr
# environment
SESSION_MANAGER = local/pokileda-ThinkPad-T480:@/tmp/.ICE-unix/1078,unix/pokileda-ThinkPad-T480:/tmp/.ICE-unix/1078
# environment
XDG_RUNTIME_DIR = /run/user/1000
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# environment
XDG_GREETER_DATA_DIR = /var/lib/lightdm-data/pokileda
# environment
LS_COLORS = 
# environment
XDG_SESSION_DESKTOP = cinnamon
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 2215
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /home/pokileda/Desktop/secc/slac
# environment
QT_QPA_PLATFORMTHEME = qt5ct
# default
.LOADED := 
# environment
XDG_SEAT = seat0
# environment
SSH_AGENT_PID = 1148
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = X-Cinnamon
# environment
GTK_MODULES = gail:atk-bridge
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/pokileda
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# environment
VSCODE_CODE_CACHE_PATH = /home/pokileda/.config/Code/CachedData/30d9c6cd9483b2cc586687151bcbcd635f373630
# environment
LOGNAME = pokileda
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# automatic
+F = $(notdir $+)
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
XDG_VTNR = 7
# environment
LC_TIME = en_US.UTF-8
# makefile (from 'Makefile', line 8)
IS_TWINE := 
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 0
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-af498a7b-3cf4-432b-9eeb-893651cb35bd.sock
# environment
XDG_SESSION_ID = c2
# environment
USER = pokileda
# environment
LC_MONETARY = az_IR.UTF-8
# makefile (from 'Makefile', line 3)
.DEFAULT_GOAL := help
# environment
XDG_CURRENT_DESKTOP = X-Cinnamon
# makefile (from 'Makefile', line 7)
IS_POETRY := 
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
LC_TELEPHONE = az_IR.UTF-8
# default
MAKE_COMMAND := make
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# environment
LANGUAGE = en_US
# environment
XDG_SEAT_PATH = /org/freedesktop/DisplayManager/Seat0
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-ce92d484-1.68.1-main.sock
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# automatic
 
+D = $(patsubst %/,%,$(dir $+))
# environment
GDK_BACKEND = x11
# environment
LC_PAPER = az_IR.UTF-8
# environment
CINNAMON_VERSION = 5.2.7
# environment
QT_ACCESSIBILITY = 1
# environment
DEFAULTS_PATH = /usr/share/gconf/cinnamon.default.path
# 'override' directive
.SHELLSTATUS := 1
# default
MAKEFILES := 
# environment
LC_NUMERIC = az_IR.UTF-8
# automatic
<F = $(notdir $<)
# environment
LC_MEASUREMENT = az_IR.UTF-8
# environment
LC_ALL = C
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# environment
CHROME_DESKTOP = code-url-handler.desktop
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# environment
LC_IDENTIFICATION = az_IR.UTF-8
# default
.RECIPEPREFIX := 
# environment
LC_ADDRESS = az_IR.UTF-8
# makefile (from 'Makefile', line 5)
IS_LINUX_OS := 1
# environment
LANG = C
# environment
VSCODE_PID = 2215
# variable set hash-table stats:
# Load=115/1024=11%, Rehash=0, Collisions=12/154=8%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 66307, inode 14715845): 19 files, no impossibilities.

# 19 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

install-local:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 62):
	pip install .

black:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 77):
	black --exclude --check --diff --line-length=88 pyslac tests

# Not a target:
all:
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.

configure-credentials:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

.check-os:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 34):
	@# The @ is to supress the output of the evaluation
	@if [ ${IS_LINUX_OS} -eq 0 ]; then echo "This recipe is not available in non-Linux Systems. \
	Please, consider using 'make build' to run the tests in a Docker container"; exit 3; fi

.PHONY: .check-env-vars .deps .pip-install docs tests build dev run update install-local run-local deploy help release configure-credentials
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

reformat:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 74):
	isort pyslac tests && black --exclude --line-length=88 pyslac tests

poetry-update:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 59):
	poetry update

tests: .check-os
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 46):
	poetry run pytest -vv tests

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-07-07 16:13:45.174036641
#  File has been updated.
#  Successfully updated.

update:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 49):
	docker-compose build

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 14):
	@echo "Please use 'make <target>' where <target> is one of"
	@echo ""
	@echo "  build                     builds the app in Docker"
	@echo "  run                       runs the app in Docker with prod settings"
	@echo "  dev                       runs the app in Docker with dev settings"
	@echo "  run-local                 runs the app locally with prod settings"
	@echo "  run-local-sudo            runs the app locally using prod settings and root privileges"
	@echo "  poetry-update             updates the dependencies in poetry.lock"
	@echo "  install-local             installs pyslac into the current environment"
	@echo "  tests                     run all the tests"
	@echo "  reformat                  reformats the code, using Black"
	@echo "  flake8                    flakes8 the code"
	@echo "  release version=<mj.mn.p> bumps the project version to <mj.mn.p>, using poetry;"
	@echo ""
	@echo "Check the Makefile to know exactly what each target is doing."

code-quality: reformat mypy black flake8
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.install-poetry:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 31):
	@if [ -z ${IS_POETRY} ]; then pip install poetry; fi

dev:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 52):
	# the dev file apply changes to the original compose file
	docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

release: .install-poetry
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 85):
	@echo "Please remember to update the CHANGELOG.md, before tagging the release"
	@poetry version ${version}

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.pip-install:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

 
run:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 56):
	docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

run-local:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

mypy:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 71):
	mypy --config-file mypy.ini pyslac tests

docs:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 43):
	# poetry run sphinx-build -b html docs/source docs/build

deploy:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

.check-env-vars:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

flake8:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 80):
	flake8 --config .flake8 pyslac tests

.deps:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 39):
	@if [ -z ${IS_POETRY} ]; then pip install poetry; fi
	@if [ -z ${IS_TWINE} ]; then pip install twine; fi

run-slac:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 65):
	sudo $(shell which python) main.py

# files hash-table stats:
# Load=29/1024=3%, Rehash=0, Collisions=0/69=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 49 / storage = 501 B / avg = 10 B
# current buf: size = 8162 B / used = 501 B / count = 49 / avg = 10 B

# strcache performance: lookups = 87 / hit rate = 43%
# hash-table stats:
# Load=49/8192=1%, Rehash=0, Collisions=1/87=1%
# Finished Make data base on Thu Jul  7 16:34:49 2022

 
